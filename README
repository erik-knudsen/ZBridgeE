ZBridgeE will, when it is finished, be a program for bridge players who wants to play
bridge with the help of a computer. There can be from 0 to 4 human players. The
computer(s) plays the missing players. Players can be either local on the local
computer or remote on one or more remote computers. I started development of the
program because I was not satisfied with the (to my knowledge) existing
bridge programs with regard to their net abilities. ZBridgeE is for embedded
computers (currently only Android). Its companion ZBridge is for Windows computers.


Development environment is Qt with the use of Qt Creator as IDE.

Installation for ZBridge development:

1. Install smartgit (I do not use Qt Creators GIT functionality).
	Clone ZBridgeE to c:/projects/qt/zbridgeE
	
2. Install eclipse (I use eclipse for using yakindu and UMLet).
	Install yakindu in eclipse.
	Install UMLet in eclipse.
	Import project ZBridgeE to eclipse without copy (default)
	
3. Install Qt (at least v. 5)

4. Install DoxyGen
		Install Graphviz
		Install mscgen
		Set dot and mscgen pathes in DoxyFile
                
5. For Android see the "Getting Started with Qt for Android" in the 
   Qt documentation. The Android SDK Tools, The Android NDK and JAVA SE Development
   kits are needed. There is also some updating and configuration to
   be performed.
   The Double Dummy Solver by Bo Haglund is statically linked. Makefile_linux
   is used to generate libdds.a.
                
6. For Windows.
   Install Visual Studio Community 2015. Start Visual Studio and create a
   new c++ project and install required parts.
   The Double Dummy Solver by Bo Haglund is generated as a dll. Makefile_Visual
   is used to generate .lib and .dll files. The .lib file is for the linker
   and the .dll file is for the executable.
