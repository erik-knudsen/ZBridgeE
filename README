ZBridgeE is a program for bridge players who wants to play
bridge with the help of a computer. There can be from 0 to 4 human players. The
computer(s) plays the non human players. Players can be either local on the local
computer or remote on one or more remote computers. I started development of the
program because I was not satisfied with the (to my knowledge) existing
bridge programs with regard to their net abilities.
ZBridgeE is for embedded computers (currently only Android). Its companion ZBridge
is for Windows computers. They use the same communication protocol i.e. they can
play bridge with each other on the internet. 
ItemisCREATE (Yakindu) is used for modelling the states of the communication protocol.
Bridge bidding is implemented by means of a table. Bo Haglunds Double Dummy Solver
is used for calculating the best card to play (version DDS 2.9.1).

The ZBridgeE software is covered by the GNU GENERAL PUBLIC LICENSE Version3 (GPLv3).


Development environment is Qt with the use of Qt Creator as IDE.

Installation for ZBridge development:

1. Install Github Desktop (I do not use Qt Creators GIT functionality).
	Clone ZBridgeE to c:/projects/qt/zbridgeE
	
2. Install ItemisCREATE. It is an Eclipse based program.
	Install UMLet in eclipse.
	Import project ZBridgeE to eclipse without copy (default)
	
3. Install Qt.

4. Install DoxyGen
		Install Graphviz.
		Set dot and mscgen pathes in DoxyFile.

5. For Windows.
	Install Visual Studio Community.
	The MinGW C++ compiler, which can be installed as a part of Qt cannot 
	be used. Only the Visual Studio C++ compiler has support for the Qt 
	webview module. This module is used for ZBridgeE help.	
                
6. The Double Dummy Solver by Bo Haglund is generated as a dll (dds.dll, dds.lib)
	for Windows and as a static library (libdds_arm64-v8a.a) for Android.
	Both libraries are in the folder c:/projects/qt/ZBridgeE/ZBridgeE/. 
	The Double Dummy Solver can also be found in the dds repository as a Qt
	project	and can be generated here. 
	After building the Windows version of the ZBridgeE application, copy 
	dds.ddl to the build directory (debug or release) to be used by the 
	ZbridgeE application (where the zbridge.exe file is located). 
	The assets folder in the android-sources folder has help files for 
	ZBridgeE. This folder must be installed in the build folder and renamed to 
	android_asset for help to work (only for the Windows version).